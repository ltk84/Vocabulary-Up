<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbCurrency.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>